from Crypto.Util.number import *
import gmpy2

n = 143786356117385195355522728814418684024129402954309769186869633376407480449846714776247533950484109173163811708549269029920405450237443197994941951104068001708682945191370596050916441792714228818475059839352105948003874426539429621408867171203559281132589926504992702401428910240117807627890055235377744541913

e = 114194

c = open('encrypted','rb').read()

p = 11196022518013846406450257763680307528861440840633712357021019120934410373180406217919066924474450204377977943388931820832436504741695416094988192576484719

q = n / p
assert n == p * q

phi = (p-1) * (q-1)
g = GCD(e,phi)
assert g == 2

d = inverse(e/g,phi)
assert (e * d) % phi == g

c = int(c)

dec = pow(c, d, n)

flag = long_to_bytes(gmpy2.isqrt(dec))

print(flag)
